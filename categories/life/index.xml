<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>生活 on 刘公子的建安百科书</title>
        <link>https://shuliang.asia/categories/life/</link>
        <description>Recent content in 生活 on 刘公子的建安百科书</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>记录每一天</copyright>
        <lastBuildDate>Mon, 02 Jun 2025 16:18:11 +0800</lastBuildDate><atom:link href="https://shuliang.asia/categories/life/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>5月游上海</title>
        <link>https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/</link>
        <pubDate>Mon, 02 Jun 2025 16:18:11 +0800</pubDate>
        
        <guid>https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/</guid>
        <description>&lt;img src="https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/4.jpg" alt="Featured image of post 5月游上海" /&gt;&lt;p&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/1.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/1_hu_13784ee001c81f20.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/1_hu_b0c2a57d5b5f8534.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/2.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/2_hu_21806adb621a9d88.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/2_hu_74ee8d8c06e303fe.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/3.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/3_hu_b9a812813fee8ef0.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/3_hu_bfff05cf6ce3a54b.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/br&gt;
&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/4.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/4_hu_fbbd6df764fd3088.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/4_hu_fa1c34ad78fb0505.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/5.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/5_hu_6aed34bb2000d624.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/5_hu_c19eeeaa5dd87454.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/6.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;1707&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/6_hu_a8800e211c86625e.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/6_hu_df85fd775a740d7c.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/br&gt;
&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/7.JPG&#34;
	width=&#34;5712&#34;
	height=&#34;4284&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/7_hu_d721aee0856b7d1d.JPG 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/7_hu_c3562d976a61b378.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/8.JPG&#34;
	width=&#34;5712&#34;
	height=&#34;4284&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/8_hu_3f3baf015aea2a3b.JPG 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/8_hu_f62e03c59446a7ca.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;img src=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/9.jpg&#34;
	width=&#34;4284&#34;
	height=&#34;5712&#34;
	srcset=&#34;https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/9_hu_cdf34700b66dbec7.jpg 480w, https://shuliang.asia/p/5%E6%9C%88%E6%B8%B8%E4%B8%8A%E6%B5%B7/9_hu_16f3c6a8a757ce27.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/br&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>咸亨国际面试</title>
        <link>https://shuliang.asia/p/20240711/</link>
        <pubDate>Thu, 11 Jul 2024 14:15:40 +0000</pubDate>
        
        <guid>https://shuliang.asia/p/20240711/</guid>
        <description>&lt;img src="https://shuliang.asia/p/20240711/20240711.jpg" alt="Featured image of post 咸亨国际面试" /&gt;&lt;h2 id=&#34;final关键字&#34;&gt;final关键字
&lt;/h2&gt;&lt;h3 id=&#34;基本用法&#34;&gt;基本用法
&lt;/h3&gt;&lt;h4 id=&#34;修饰类&#34;&gt;修饰类
&lt;/h4&gt;&lt;p&gt;当用final修饰一个类时，表明这个类不能被继承。也就是说，如果一个类你永远不会让他被继承，就可以用final进行修饰。final类中的成员变量可以根据需要设为final，但是要注意final类中的所有成员方法都会被隐式地指定为final方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://shuliang.asia/images/final%e7%b1%bb%e6%97%a0%e6%b3%95%e7%bb%a7%e6%89%bf.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;报错信息： 无法继承最终的“mianshi.People”&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;修饰方法&#34;&gt;修饰方法
&lt;/h4&gt;&lt;p&gt;下面这段话摘自《Java编程思想》第四版第143页：&lt;/p&gt;
&lt;p&gt;　　“使用final方法的原因有两个。第一个原因是把方法锁定，以防任何继承类修改它的含义；第二个原因是效率。在早期的Java实现版本中，会将final方法转为内嵌调用。但是如果方法过于庞大，可能看不到内嵌调用带来的任何性能提升。在最近的Java版本中，不需要使用final方法进行这些优化了。“&lt;/p&gt;
&lt;p&gt;　　因此，如果只有在想明确禁止 该方法在子类中被覆盖的情况下才将方法设置为final的。&lt;/p&gt;
&lt;p&gt;注：&lt;strong&gt;类的private方法会隐式地被指定为final方法。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;修饰变量&#34;&gt;修饰变量
&lt;/h4&gt;&lt;p&gt;对于一个final变量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。&lt;/p&gt;
&lt;h3 id=&#34;深入理解final关键字&#34;&gt;深入理解final关键字
&lt;/h3&gt;&lt;h4 id=&#34;类的final变量和普通变量有什么区别&#34;&gt;类的final变量和普通变量有什么区别
&lt;/h4&gt;&lt;p&gt;当用final作用于类的成员变量时，成员变量（注意是类的成员变量，局部变量只需要保证在使用之前被初始化赋值即可）必须在定义时或者构造器中进行初始化赋值，而且final变量一旦被初始化赋值之后，就不能再被赋值了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://shuliang.asia/images/final%e5%8f%98%e9%87%8f%e6%97%a0%e6%b3%95%e4%bf%ae%e6%94%b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;变量b被final修饰，因此会被当做编译器常量，所以在使用到b的地方会直接将变量b替换为它的值。而对于变量d的访问却需要在运行时通过链接来进行。不过要注意，只有在编译期间能确切知道final变量值的情况下，编译器才会进行这样的优化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;int类型在Java中，若果作为类成员声明，不初始化值，会被默认初始化为0；如果作为方法的局部变量来声明，不进行初始化的话 会在编译期报错，无法通过编译。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;被final修饰的引用变量指向的对象内容可变吗&#34;&gt;被final修饰的引用变量指向的对象内容可变吗
&lt;/h4&gt;&lt;p&gt;可变，final修饰对象之后，引用地址不可变。&lt;/p&gt;
&lt;h4 id=&#34;final和static&#34;&gt;final和static
&lt;/h4&gt;&lt;p&gt;static作用于成员变量用来表示只保存一份副本，而final的作用是用来保证变量不可变&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyClass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myClass1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyClass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myClass2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myClass1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myClass1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myClass2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myClass2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyClass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.06299743342842823
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.6863535193008683
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.2856370702656075
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.6863535193008683
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;static修饰的变量,又称为类变量,也就是说这个变量是属于类的,类的所有实例共享这个变量,可以直接通过类名.变量名的方式获取,静态变量在内存中只存在一份&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;map和redis缓存区别&#34;&gt;map和redis缓存区别
&lt;/h2&gt;&lt;p&gt;缓存的区别&lt;/p&gt;
&lt;p&gt;缓存分为本地缓存和分布式缓存。以java为例，使用自带的map或者guava实现的是本地缓存，最主要的特点是轻量以及快速，生命周期随着jvm的销毁而结束，并且在多实例的情况下，每个实例都需要各自保存一份缓存，缓存不具有一致性。&lt;/p&gt;
&lt;p&gt;使用redis或memcached之类的称为分布式缓存，在多实例的情况下，各实例共用一份缓存数据，缓存具有一致性。缺点是需要保持redis或memcached服务的高可用，整个程序架构上较为复杂。&lt;/p&gt;
&lt;p&gt;当然如果只是将少量数据保存作为缓存并且没有持久化的需求，那么完全可以用Map做缓存。&lt;/p&gt;
&lt;p&gt;详细的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Redis 可以用几十 G 内存来做缓存，Map 不行，一般 JVM 也就分几个 G 数据就够大了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis 的缓存可以持久化，Map 是内存对象，程序一重启数据就没了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis 可以实现分布式的缓存，Map 只能存在创建它的程序里&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis 单点吞吐量能达到10万级，是专业的缓存服务，Map 只是一个普通的对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis 缓存有过期机制，Map 本身无此功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis 有丰富的 API，Map 就简单太多了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;java常量池&#34;&gt;Java常量池
&lt;/h2&gt;&lt;h3 id=&#34;string常量池&#34;&gt;String常量池
&lt;/h3&gt;&lt;p&gt;当String类直接赋值时，如果常量池内存在这个字符串，则s1直接指向常量池的地址，若没有，则先在常量池内创建这个字符串对象，s1直接指向常量池这个字符串的内存地址； 当String类使用new实例对象时，首先在堆里创建这个对象，若是常量池内没这个字符串，则也创建一个，然后堆里的对象的value指向常量池内的字符串。&lt;/p&gt;
&lt;h3 id=&#34;class常量池&#34;&gt;class常量池
&lt;/h3&gt;&lt;h3 id=&#34;运行时常量池&#34;&gt;运行时常量池
&lt;/h3&gt;&lt;h2 id=&#34;函数式编程&#34;&gt;函数式编程
&lt;/h2&gt;&lt;h2 id=&#34;restcontroller和controller区别&#34;&gt;@RestController和@Controller区别
&lt;/h2&gt;&lt;p&gt;@RestController注解等价于@ResponseBody ＋ @Controller。@RestController和@Controller的共同点是都用来表示Spring某个类是否可以接收HTTP请求，二者区别： @RestController无法返回指定页面，而@Controller可以；前者可以直接返回数据，后者需要@ResponseBody辅助。下面详细分析。&lt;/p&gt;
&lt;p&gt;① 是否可以返回页面&lt;/p&gt;
&lt;p&gt;　　答：@RestController无法返回指定页面，而@Controller可以。 　　解析：对于Controller， 如果只是使用@RestController注解，则其方法无法返回指定页面，此时配置的视图解析器 InternalResourceViewResolver不起作用，返回的内容就是 return 里的内容。 如果需要返回到指定页面，则需要用 @Controller配合视图解析器InternalResourceViewResolver才行。&lt;/p&gt;
&lt;p&gt;② 返回内容 　　如果需要返回JSON，XML或自定义mediaType内容到页面，@RestController自己就可以搞定，这个注解对于返回数据比较方便，因为它会自动将对象实体转换为JSON格式。而@Controller需要在对应的方法加上@ResponseBody注解。&lt;/p&gt;
&lt;h2 id=&#34;bean和component区别&#34;&gt;@Bean和@Component区别
&lt;/h2&gt;</description>
        </item>
        
    </channel>
</rss>
